<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAA
        ADMAAAAzAAAAMwAAAA8AAAAAAAAAALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+AFI9
        HFC2hz7/toc+/7aHPv98XCpxAAAAA7aHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+AAAA
        ABO2hz7/toc+67aHPgG2hz6stoc+/zsrFDK2hz4Atoc+ALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaH
        PgCKZy99toc+/7aHPgm2hz4Atoc+ALWGPtyofDnBtoc+ALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4AtIU98rGDPLS2hz4Atoc+ALaHPgC2hz5Ltoc+/wAAABS2hz4Atoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4AAAAAE7aHPv+2hz5Ltoc+ALaHPgC2hz4Atoc+ALaHPv+RazF7toc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4Atoc+AJRuM3e2hz7/toc+ALaHPgC2hz4Atoc+ALaHPgCwgjyjrYA70wAAADMAAAAEtoc+ALaH
        PgC2hz4Atoc+ALaHPgCofTnAsoQ9y7aHPgC2hz4Atoc+ALaHPgC2hz4Atoc+TraHPv+2hz7/ZEoiKLaH
        PgC2hz4Atoc+ALaHPgC2hz4AtIU9862BO3u2hz4Atoc+ALaHPgC2hz4Atoc+ALaHPgK2hz7/toc+/5Ru
        M3i2hz4Atoc+ALaHPgC2hz4AAAAAD7aHPv+2hz44toc+ALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALKE
        PcunfDnBtoc+ALaHPgC2hz4Atoc+AI1oMGG2hz7/toc+ALaHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz5gtoc+/wAAABO2hz4Atoc+ALaHPgCieDevsoQ937aHPgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4Atoc+ALaHPv+IZS5+toc+ALaHPgAAAAAKtIU987WGPou2hz4Atoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4Atoc+ALaHPgC1hj6xtoc+/wAAACIAAAAIZUsiXLaHPv+2hz4Ptoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4Atoc+ALaHPgC2hz4Atoc+DraHPv+mezi6WkMfVbaHPv+2hz7Htoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4Atoc+ALaHPgC2hz4Atoc+ALaHPgC2hz5htoc+/7aHPv+2hz7dtoc+ALaHPgC2hz4Atoc+ALaH
        PgC2hz4Atoc+ALaHPgC2hz4Atoc+AP+DAAD/gQAA/wEAAP8ZAAD/OAAA/jwAAP58AAA+fAAAPnwAADx/
        AAA8/wAAHP8AAJj/AACA/wAAgf8AAMP/AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAIAAAAEQAAABYAAAAWAAAAEQAAAAgAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACwAAACIAAAA5AAAAQgAAAEIAAAA5AAAAIgAA
        AAsAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAjYkYZacSIL/rHjTP/x40z/8SJ
        MPliRhlpAAAAJAAAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAGXpWH3TFiTD/0qJO/+LB
        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
        f//AwP//wAD//+AB///gAf//8AP///AD///4B///
</value>
  </data>
</root>